/// <reference path="../../../typings/tsd.d.ts" />
/// <reference path="../connection/connection.service.ts" />
var connection = require('../connection/connection.service');
var AuthService = (function () {
    function AuthService() {
        this.db = connection.service;
    }
    AuthService.prototype.getNonce = function (controller, method) {
        return this.db.query('api/get_nonce/?controller=' + controller + '&method=' + method);
    };
    AuthService.prototype.register = function (username, email, nonce, display_name) {
        return this.db.query('api/user/register/?username=' + username + '&email=' + email + '&nonce=' + nonce + '&display_name=' + display_name);
    };
    AuthService.prototype.login = function (username, password) {
        return this.db.query('api/user/generate_auth_cookie/?username=' + username + '&password=' + password);
    };
    /*
        fbLogin(access_token): Q.IPromise<{}> {
            return this.db.query('api/user/fb_connect/?access_token=' + access_token)
        }
    */
    AuthService.prototype.isAuthorized = function (cookie) {
        return this.db.query('api/user/validate_auth_cookie/?cookie=' + cookie);
    };
    AuthService.prototype.getUserInfo = function (userId) {
        return this.db.query('api/user/get_userinfo/?user_id=' + userId);
    };
    AuthService.prototype.getUserAvatar = function (userId, type) {
        return this.db.query('api/user/get_avatar/?user_id=' + userId + '&type=' + type);
    };
    AuthService.prototype.resetPassword = function (username) {
        return this.db.query('api/user/retrieve_password/?user_login=' + username);
    };
    return AuthService;
})();
exports.AuthService = AuthService;
;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvYXV0aC9hdXRoLnNlcnZpY2UudHMiXSwibmFtZXMiOlsiQXV0aFNlcnZpY2UiLCJBdXRoU2VydmljZS5jb25zdHJ1Y3RvciIsIkF1dGhTZXJ2aWNlLmdldE5vbmNlIiwiQXV0aFNlcnZpY2UucmVnaXN0ZXIiLCJBdXRoU2VydmljZS5sb2dpbiIsIkF1dGhTZXJ2aWNlLmlzQXV0aG9yaXplZCIsIkF1dGhTZXJ2aWNlLmdldFVzZXJJbmZvIiwiQXV0aFNlcnZpY2UuZ2V0VXNlckF2YXRhciIsIkF1dGhTZXJ2aWNlLnJlc2V0UGFzc3dvcmQiXSwibWFwcGluZ3MiOiJBQUFBLGtEQUFrRDtBQUNsRCw0REFBNEQ7QUFHNUQsSUFBTyxVQUFVLFdBQVcsa0NBQWtDLENBQUMsQ0FBQTtBQWdCL0QsSUFBYSxXQUFXO0lBQXhCQSxTQUFhQSxXQUFXQTtRQUNaQyxPQUFFQSxHQUFHQSxVQUFVQSxDQUFDQSxPQUFPQSxDQUFDQTtJQXlDcENBLENBQUNBO0lBdkNHRCw4QkFBUUEsR0FBUkEsVUFBU0EsVUFBVUEsRUFBRUEsTUFBTUE7UUFDdkJFLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLDRCQUE0QkEsR0FBR0EsVUFBVUEsR0FDekNBLFVBQVVBLEdBQUdBLE1BQU1BLENBQUNBLENBQUFBO0lBQzdDQSxDQUFDQTtJQUVERiw4QkFBUUEsR0FBUkEsVUFBU0EsUUFBUUEsRUFBRUEsS0FBS0EsRUFBRUEsS0FBS0EsRUFBRUEsWUFBWUE7UUFDekNHLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLDhCQUE4QkEsR0FBR0EsUUFBUUEsR0FDekNBLFNBQVNBLEdBQUdBLEtBQUtBLEdBQ2pCQSxTQUFTQSxHQUFHQSxLQUFLQSxHQUNqQkEsZ0JBQWdCQSxHQUFHQSxZQUFZQSxDQUFDQSxDQUFBQTtJQUN6REEsQ0FBQ0E7SUFFREgsMkJBQUtBLEdBQUxBLFVBQU1BLFFBQVFBLEVBQUVBLFFBQVFBO1FBQ3BCSSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxLQUFLQSxDQUFDQSwwQ0FBMENBLEdBQUdBLFFBQVFBLEdBQ3JEQSxZQUFZQSxHQUFHQSxRQUFRQSxDQUFDQSxDQUFBQTtJQUNqREEsQ0FBQ0E7SUFFTEo7Ozs7TUFJRUE7SUFFRUEsa0NBQVlBLEdBQVpBLFVBQWFBLE1BQU1BO1FBQ2ZLLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLHdDQUF3Q0EsR0FBR0EsTUFBTUEsQ0FBQ0EsQ0FBQUE7SUFDM0VBLENBQUNBO0lBRURMLGlDQUFXQSxHQUFYQSxVQUFZQSxNQUFNQTtRQUNkTSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxLQUFLQSxDQUFDQSxpQ0FBaUNBLEdBQUdBLE1BQU1BLENBQUNBLENBQUFBO0lBQ3BFQSxDQUFDQTtJQUVETixtQ0FBYUEsR0FBYkEsVUFBY0EsTUFBTUEsRUFBRUEsSUFBSUE7UUFDdEJPLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLCtCQUErQkEsR0FBR0EsTUFBTUEsR0FDeENBLFFBQVFBLEdBQUdBLElBQUlBLENBQUNBLENBQUFBO0lBQ3pDQSxDQUFDQTtJQUVEUCxtQ0FBYUEsR0FBYkEsVUFBY0EsUUFBUUE7UUFDbEJRLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLHlDQUF5Q0EsR0FBR0EsUUFBUUEsQ0FBQ0EsQ0FBQUE7SUFDOUVBLENBQUNBO0lBQ0xSLGtCQUFDQTtBQUFEQSxDQTFDQSxBQTBDQ0EsSUFBQTtBQTFDWSxtQkFBVyxHQUFYLFdBMENaLENBQUE7QUFBQSxDQUFDIiwiZmlsZSI6Im1vZHVsZXMvYXV0aC9hdXRoLnNlcnZpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vLi4vLi4vdHlwaW5ncy90c2QuZC50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vY29ubmVjdGlvbi9jb25uZWN0aW9uLnNlcnZpY2UudHNcIiAvPlxuXG5pbXBvcnQgUSA9IHJlcXVpcmUoXCJxXCIpO1xuaW1wb3J0IGNvbm5lY3Rpb24gPSByZXF1aXJlKCcuLi9jb25uZWN0aW9uL2Nvbm5lY3Rpb24uc2VydmljZScpXG5cbmV4cG9ydCBpbnRlcmZhY2UgSUF1dGhTZXJ2aWNlIHtcbiAgICAvLyBHRVRcbiAgICBnZXROb25jZShjb250cm9sbGVyLCBtZXRob2QpOiBRLklQcm9taXNlPHt9PjtcbiAgICBnZXRVc2VySW5mbyh1c2VySWQpOiBRLklQcm9taXNlPHt9PjtcbiAgICBnZXRVc2VyQXZhdGFyKHVzZXJJZCwgdHlwZSk6IFEuSVByb21pc2U8e30+O1xuICAgIC8vIFBPU1RcbiAgICByZWdpc3Rlcih1c2VybmFtZSwgZW1haWwsIG5vbmNlLCBkaXNwbGF5X25hbWUpOiBRLklQcm9taXNlPHt9PjtcbiAgICBsb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpOiBRLklQcm9taXNlPHt9Pjtcbi8vICAgIGZiTG9naW4oYWNjZXNzX3Rva2VuKTogUS5JUHJvbWlzZTx7fT47XG4gICAgaXNBdXRob3JpemVkKGNvb2tpZSk6IFEuSVByb21pc2U8e30+O1xuICAgIHJlc2V0UGFzc3dvcmQodXNlcm5hbWUpOiBRLklQcm9taXNlPHt9Pjtcbn1cblxuXG5leHBvcnQgY2xhc3MgQXV0aFNlcnZpY2UgaW1wbGVtZW50cyBJQXV0aFNlcnZpY2Uge1xuICAgIHByaXZhdGUgZGIgPSBjb25uZWN0aW9uLnNlcnZpY2U7XG5cbiAgICBnZXROb25jZShjb250cm9sbGVyLCBtZXRob2QpOiBRLklQcm9taXNlPHt9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmRiLnF1ZXJ5KCdhcGkvZ2V0X25vbmNlLz9jb250cm9sbGVyPScgKyBjb250cm9sbGVyICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyZtZXRob2Q9JyArIG1ldGhvZClcbiAgICB9XG5cbiAgICByZWdpc3Rlcih1c2VybmFtZSwgZW1haWwsIG5vbmNlLCBkaXNwbGF5X25hbWUpOiBRLklQcm9taXNlPHt9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmRiLnF1ZXJ5KCdhcGkvdXNlci9yZWdpc3Rlci8/dXNlcm5hbWU9JyArIHVzZXJuYW1lICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyZlbWFpbD0nICsgZW1haWwgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnJm5vbmNlPScgKyBub25jZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICcmZGlzcGxheV9uYW1lPScgKyBkaXNwbGF5X25hbWUpXG4gICAgfVxuXG4gICAgbG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKTogUS5JUHJvbWlzZTx7fT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kYi5xdWVyeSgnYXBpL3VzZXIvZ2VuZXJhdGVfYXV0aF9jb29raWUvP3VzZXJuYW1lPScgKyB1c2VybmFtZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICcmcGFzc3dvcmQ9JyArIHBhc3N3b3JkKVxuICAgIH1cblxuLypcbiAgICBmYkxvZ2luKGFjY2Vzc190b2tlbik6IFEuSVByb21pc2U8e30+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGIucXVlcnkoJ2FwaS91c2VyL2ZiX2Nvbm5lY3QvP2FjY2Vzc190b2tlbj0nICsgYWNjZXNzX3Rva2VuKVxuICAgIH1cbiovXG5cbiAgICBpc0F1dGhvcml6ZWQoY29va2llKTogUS5JUHJvbWlzZTx7fT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kYi5xdWVyeSgnYXBpL3VzZXIvdmFsaWRhdGVfYXV0aF9jb29raWUvP2Nvb2tpZT0nICsgY29va2llKVxuICAgIH1cblxuICAgIGdldFVzZXJJbmZvKHVzZXJJZCk6IFEuSVByb21pc2U8e30+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGIucXVlcnkoJ2FwaS91c2VyL2dldF91c2VyaW5mby8/dXNlcl9pZD0nICsgdXNlcklkKVxuICAgIH1cblxuICAgIGdldFVzZXJBdmF0YXIodXNlcklkLCB0eXBlKTogUS5JUHJvbWlzZTx7fT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kYi5xdWVyeSgnYXBpL3VzZXIvZ2V0X2F2YXRhci8/dXNlcl9pZD0nICsgdXNlcklkICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyZ0eXBlPScgKyB0eXBlKVxuICAgIH1cblxuICAgIHJlc2V0UGFzc3dvcmQodXNlcm5hbWUpOiBRLklQcm9taXNlPHt9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmRiLnF1ZXJ5KCdhcGkvdXNlci9yZXRyaWV2ZV9wYXNzd29yZC8/dXNlcl9sb2dpbj0nICsgdXNlcm5hbWUpXG4gICAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==