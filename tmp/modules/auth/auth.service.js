/// <reference path="../../../typings/tsd.d.ts" />
/// <reference path="../connection/connection.service.ts" />
var connection = require('../connection/connection.service');
var AuthService = (function () {
    function AuthService() {
        this.db = connection.service;
    }
    AuthService.prototype.getNonce = function (controller, method) {
        return this.db.query('api/get_nonce/?controller=' + controller + '&method=' + method);
    };
    AuthService.prototype.register = function (username, email, nonce, display_name) {
        return this.db.query('api/user/register/?username=' + username + '&email=' + email + '&nonce=' + nonce + '&display_name=' + display_name);
    };
    AuthService.prototype.login = function (username, password) {
        return this.db.query('api/user/generate_auth_cookie/?username=' + username + '&password=' + password);
    };
    /*
        fbLogin(access_token): Q.IPromise<{}> {
            return this.db.query('api/user/fb_connect/?access_token=' + access_token)
        }
    */
    AuthService.prototype.isAuthorized = function (cookie) {
        return this.db.query('api/user/validate_auth_cookie/?cookie=' + cookie);
    };
    AuthService.prototype.getUserInfo = function (userId) {
        return this.db.query('api/user/get_userinfo/?user_id=' + userId);
    };
    AuthService.prototype.getUserAvatar = function (userId, type) {
        return this.db.query('api/user/get_avatar/?user_id=' + userId + '&type=' + type);
    };
    AuthService.prototype.resetPassword = function (username) {
        return this.db.query('api/user/retrieve_password/?user_login=' + username);
    };
    return AuthService;
})();
exports.AuthService = AuthService;
;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvYXV0aC9hdXRoLnNlcnZpY2UudHMiXSwibmFtZXMiOlsiQXV0aFNlcnZpY2UiLCJBdXRoU2VydmljZS5jb25zdHJ1Y3RvciIsIkF1dGhTZXJ2aWNlLmdldE5vbmNlIiwiQXV0aFNlcnZpY2UucmVnaXN0ZXIiLCJBdXRoU2VydmljZS5sb2dpbiIsIkF1dGhTZXJ2aWNlLmlzQXV0aG9yaXplZCIsIkF1dGhTZXJ2aWNlLmdldFVzZXJJbmZvIiwiQXV0aFNlcnZpY2UuZ2V0VXNlckF2YXRhciIsIkF1dGhTZXJ2aWNlLnJlc2V0UGFzc3dvcmQiXSwibWFwcGluZ3MiOiJBQUFBLGtEQUFrRDtBQUNsRCw0REFBNEQ7QUFHNUQsSUFBTyxVQUFVLFdBQVcsa0NBQWtDLENBQUMsQ0FBQTtBQWMvRCxJQUFhLFdBQVc7SUFBeEJBLFNBQWFBLFdBQVdBO1FBQ1pDLE9BQUVBLEdBQUdBLFVBQVVBLENBQUNBLE9BQU9BLENBQUNBO0lBbUNwQ0EsQ0FBQ0E7SUFqQ0dELDhCQUFRQSxHQUFSQSxVQUFTQSxVQUFVQSxFQUFFQSxNQUFNQTtRQUN2QkUsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsNEJBQTRCQSxHQUFHQSxVQUFVQSxHQUFHQSxVQUFVQSxHQUFHQSxNQUFNQSxDQUFDQSxDQUFBQTtJQUN6RkEsQ0FBQ0E7SUFFREYsOEJBQVFBLEdBQVJBLFVBQVNBLFFBQVFBLEVBQUVBLEtBQUtBLEVBQUVBLEtBQUtBLEVBQUVBLFlBQVlBO1FBQ3pDRyxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxLQUFLQSxDQUFDQSw4QkFBOEJBLEdBQUdBLFFBQVFBLEdBQUdBLFNBQVNBLEdBQUdBLEtBQUtBLEdBQUdBLFNBQVNBLEdBQUdBLEtBQUtBLEdBQUdBLGdCQUFnQkEsR0FBR0EsWUFBWUEsQ0FBQ0EsQ0FBQUE7SUFDN0lBLENBQUNBO0lBRURILDJCQUFLQSxHQUFMQSxVQUFNQSxRQUFRQSxFQUFFQSxRQUFRQTtRQUNwQkksTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsMENBQTBDQSxHQUFHQSxRQUFRQSxHQUFHQSxZQUFZQSxHQUFHQSxRQUFRQSxDQUFDQSxDQUFBQTtJQUN6R0EsQ0FBQ0E7SUFFTEo7Ozs7TUFJRUE7SUFFRUEsa0NBQVlBLEdBQVpBLFVBQWFBLE1BQU1BO1FBQ2ZLLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLHdDQUF3Q0EsR0FBR0EsTUFBTUEsQ0FBQ0EsQ0FBQUE7SUFDM0VBLENBQUNBO0lBRURMLGlDQUFXQSxHQUFYQSxVQUFZQSxNQUFNQTtRQUNkTSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxLQUFLQSxDQUFDQSxpQ0FBaUNBLEdBQUdBLE1BQU1BLENBQUNBLENBQUFBO0lBQ3BFQSxDQUFDQTtJQUVETixtQ0FBYUEsR0FBYkEsVUFBY0EsTUFBTUEsRUFBRUEsSUFBSUE7UUFDdEJPLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLENBQUNBLEtBQUtBLENBQUNBLCtCQUErQkEsR0FBR0EsTUFBTUEsR0FBR0EsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0EsQ0FBQUE7SUFDcEZBLENBQUNBO0lBRURQLG1DQUFhQSxHQUFiQSxVQUFjQSxRQUFRQTtRQUNsQlEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EseUNBQXlDQSxHQUFHQSxRQUFRQSxDQUFDQSxDQUFBQTtJQUM5RUEsQ0FBQ0E7SUFDTFIsa0JBQUNBO0FBQURBLENBcENBLEFBb0NDQSxJQUFBO0FBcENZLG1CQUFXLEdBQVgsV0FvQ1osQ0FBQTtBQUFBLENBQUMiLCJmaWxlIjoibW9kdWxlcy9hdXRoL2F1dGguc2VydmljZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi8uLi90eXBpbmdzL3RzZC5kLnRzXCIgLz5cbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi9jb25uZWN0aW9uL2Nvbm5lY3Rpb24uc2VydmljZS50c1wiIC8+XG5cbmltcG9ydCBRID0gcmVxdWlyZShcInFcIik7XG5pbXBvcnQgY29ubmVjdGlvbiA9IHJlcXVpcmUoJy4uL2Nvbm5lY3Rpb24vY29ubmVjdGlvbi5zZXJ2aWNlJylcblxuZXhwb3J0IGludGVyZmFjZSBJQXV0aFNlcnZpY2Uge1xuICAgIGdldE5vbmNlKGNvbnRyb2xsZXIsIG1ldGhvZCk6IFEuSVByb21pc2U8e30+O1xuICAgIHJlZ2lzdGVyKHVzZXJuYW1lLCBlbWFpbCwgbm9uY2UsIGRpc3BsYXlfbmFtZSk6IFEuSVByb21pc2U8e30+O1xuICAgIGxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZCk6IFEuSVByb21pc2U8e30+O1xuLy8gICAgZmJMb2dpbihhY2Nlc3NfdG9rZW4pOiBRLklQcm9taXNlPHt9PjtcbiAgICBpc0F1dGhvcml6ZWQoY29va2llKTogUS5JUHJvbWlzZTx7fT47XG4gICAgZ2V0VXNlckluZm8odXNlcklkKTogUS5JUHJvbWlzZTx7fT47XG4gICAgZ2V0VXNlckF2YXRhcih1c2VySWQsIHR5cGUpOiBRLklQcm9taXNlPHt9PjtcbiAgICByZXNldFBhc3N3b3JkKHVzZXJuYW1lKTogUS5JUHJvbWlzZTx7fT47XG59XG5cblxuZXhwb3J0IGNsYXNzIEF1dGhTZXJ2aWNlIGltcGxlbWVudHMgSUF1dGhTZXJ2aWNlIHtcbiAgICBwcml2YXRlIGRiID0gY29ubmVjdGlvbi5zZXJ2aWNlO1xuXG4gICAgZ2V0Tm9uY2UoY29udHJvbGxlciwgbWV0aG9kKTogUS5JUHJvbWlzZTx7fT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kYi5xdWVyeSgnYXBpL2dldF9ub25jZS8/Y29udHJvbGxlcj0nICsgY29udHJvbGxlciArICcmbWV0aG9kPScgKyBtZXRob2QpXG4gICAgfVxuXG4gICAgcmVnaXN0ZXIodXNlcm5hbWUsIGVtYWlsLCBub25jZSwgZGlzcGxheV9uYW1lKTogUS5JUHJvbWlzZTx7fT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kYi5xdWVyeSgnYXBpL3VzZXIvcmVnaXN0ZXIvP3VzZXJuYW1lPScgKyB1c2VybmFtZSArICcmZW1haWw9JyArIGVtYWlsICsgJyZub25jZT0nICsgbm9uY2UgKyAnJmRpc3BsYXlfbmFtZT0nICsgZGlzcGxheV9uYW1lKVxuICAgIH1cblxuICAgIGxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZCk6IFEuSVByb21pc2U8e30+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGIucXVlcnkoJ2FwaS91c2VyL2dlbmVyYXRlX2F1dGhfY29va2llLz91c2VybmFtZT0nICsgdXNlcm5hbWUgKyAnJnBhc3N3b3JkPScgKyBwYXNzd29yZClcbiAgICB9XG5cbi8qXG4gICAgZmJMb2dpbihhY2Nlc3NfdG9rZW4pOiBRLklQcm9taXNlPHt9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmRiLnF1ZXJ5KCdhcGkvdXNlci9mYl9jb25uZWN0Lz9hY2Nlc3NfdG9rZW49JyArIGFjY2Vzc190b2tlbilcbiAgICB9XG4qL1xuXG4gICAgaXNBdXRob3JpemVkKGNvb2tpZSk6IFEuSVByb21pc2U8e30+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGIucXVlcnkoJ2FwaS91c2VyL3ZhbGlkYXRlX2F1dGhfY29va2llLz9jb29raWU9JyArIGNvb2tpZSlcbiAgICB9XG5cbiAgICBnZXRVc2VySW5mbyh1c2VySWQpOiBRLklQcm9taXNlPHt9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmRiLnF1ZXJ5KCdhcGkvdXNlci9nZXRfdXNlcmluZm8vP3VzZXJfaWQ9JyArIHVzZXJJZClcbiAgICB9XG5cbiAgICBnZXRVc2VyQXZhdGFyKHVzZXJJZCwgdHlwZSk6IFEuSVByb21pc2U8e30+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGIucXVlcnkoJ2FwaS91c2VyL2dldF9hdmF0YXIvP3VzZXJfaWQ9JyArIHVzZXJJZCArICcmdHlwZT0nICsgdHlwZSlcbiAgICB9XG5cbiAgICByZXNldFBhc3N3b3JkKHVzZXJuYW1lKTogUS5JUHJvbWlzZTx7fT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kYi5xdWVyeSgnYXBpL3VzZXIvcmV0cmlldmVfcGFzc3dvcmQvP3VzZXJfbG9naW49JyArIHVzZXJuYW1lKVxuICAgIH1cbn07XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=