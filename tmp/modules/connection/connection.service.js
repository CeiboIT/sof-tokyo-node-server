///<reference path='../../../typings/tsd.d.ts' />
'use strict';
var mysql = require("mysql");
var q = require("q");
var request = require("request");
var ConnectionService = (function () {
    function ConnectionService() {
        this.dbConfig = {
            host: 'gator2009.hostgator.com',
            user: 'tdnb1207_sof',
            password: 'pkc~^_9WZ(us',
            database: 'tdnb1207_sof',
            //database: 'tdnb1207_sof_develop', // develop
            debug: false,
            insecureAuth: true
        };
    }
    ConnectionService.prototype.query = function (params) {
        var _queryPromise = q.defer();
        request('http://sof.tokyo/api/' + params, function (error, response, body) {
            if (!error && response.statusCode == 200) {
                _queryPromise.resolve(JSON.parse(body)); // Show the HTML for the Google homepage.
            }
            else {
                _queryPromise.resolve(JSON.parse(body));
            }
        });
        return _queryPromise.promise;
    };
    ConnectionService.prototype.query_db = function (params) {
        var defer = q.defer();
        var _rows;
        var _connection = mysql.createConnection(this.dbConfig);
        _connection.query(params, function (err, rows) {
            _connection.end();
            if (err) {
                defer.reject(err);
                throw err;
            }
            ;
            defer.resolve(rows);
        });
        return defer.promise;
    };
    return ConnectionService;
})();
exports.ConnectionService = ConnectionService;
exports.service = new ConnectionService();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvY29ubmVjdGlvbi9jb25uZWN0aW9uLnNlcnZpY2UudHMiXSwibmFtZXMiOlsiQ29ubmVjdGlvblNlcnZpY2UiLCJDb25uZWN0aW9uU2VydmljZS5jb25zdHJ1Y3RvciIsIkNvbm5lY3Rpb25TZXJ2aWNlLnF1ZXJ5IiwiQ29ubmVjdGlvblNlcnZpY2UucXVlcnlfZGIiXSwibWFwcGluZ3MiOiJBQUFBLEFBQ0EsaURBRGlEO0FBQ2pELFlBQVksQ0FBQztBQUViLElBQU8sS0FBSyxXQUFXLE9BQU8sQ0FBQyxDQUFDO0FBQ2hDLElBQU8sQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0FBQ3hCLElBQU8sT0FBTyxXQUFXLFNBQVMsQ0FBQyxDQUFDO0FBT3BDLElBQWEsaUJBQWlCO0lBSTFCQSxTQUpTQSxpQkFBaUJBO1FBS3RCQyxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQTtZQUNaQSxJQUFJQSxFQUFFQSx5QkFBeUJBO1lBQy9CQSxJQUFJQSxFQUFFQSxjQUFjQTtZQUNwQkEsUUFBUUEsRUFBRUEsY0FBY0E7WUFDeEJBLFFBQVFBLEVBQUVBLGNBQWNBO1lBQ3hCQSxBQUNBQSw4Q0FEOENBO1lBQzlDQSxLQUFLQSxFQUFFQSxLQUFLQTtZQUNaQSxZQUFZQSxFQUFFQSxJQUFJQTtTQUNyQkEsQ0FBQUE7SUFDTEEsQ0FBQ0E7SUFFREQsaUNBQUtBLEdBQUxBLFVBQU1BLE1BQU1BO1FBQ1JFLElBQUlBLGFBQWFBLEdBQUdBLENBQUNBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBO1FBQzlCQSxPQUFPQSxDQUFDQSx1QkFBdUJBLEdBQUdBLE1BQU1BLEVBQUVBLFVBQVNBLEtBQUtBLEVBQUVBLFFBQVFBLEVBQUVBLElBQUlBO1lBQ3BFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLFFBQVEsQ0FBQyxVQUFVLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDdkMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUMseUNBQXlDO1lBQ3JGLENBQUMsR0FEMEM7WUFDekMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osYUFBYSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7WUFDM0MsQ0FBQztRQUNMLENBQUMsQ0FBQ0EsQ0FBQUE7UUFDRkEsTUFBTUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsT0FBT0EsQ0FBQ0E7SUFDakNBLENBQUNBO0lBRURGLG9DQUFRQSxHQUFSQSxVQUFTQSxNQUFNQTtRQUNYRyxJQUFJQSxLQUFLQSxHQUFHQSxDQUFDQSxDQUFDQSxLQUFLQSxFQUFFQSxDQUFDQTtRQUN0QkEsSUFBSUEsS0FBS0EsQ0FBQ0E7UUFDVkEsSUFBSUEsV0FBV0EsR0FBR0EsS0FBS0EsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQTtRQUN4REEsV0FBV0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsTUFBTUEsRUFBRUEsVUFBQ0EsR0FBR0EsRUFBRUEsSUFBSUE7WUFDaENBLFdBQVdBLENBQUNBLEdBQUdBLEVBQUVBLENBQUNBO1lBQ2xCQSxFQUFFQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDTkEsS0FBS0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0E7Z0JBQUNBLE1BQU1BLEdBQUdBLENBQUFBO1lBQ2hDQSxDQUFDQTtZQUFBQSxDQUFDQTtZQUNGQSxLQUFLQSxDQUFDQSxPQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtRQUN4QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQUE7UUFDRkEsTUFBTUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsT0FBT0EsQ0FBQ0E7SUFDekJBLENBQUNBO0lBRUxILHdCQUFDQTtBQUFEQSxDQTFDQSxBQTBDQ0EsSUFBQTtBQTFDWSx5QkFBaUIsR0FBakIsaUJBMENaLENBQUE7QUFFVSxlQUFPLEdBQUcsSUFBSSxpQkFBaUIsRUFBRSxDQUFDIiwiZmlsZSI6Im1vZHVsZXMvY29ubmVjdGlvbi9jb25uZWN0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy88cmVmZXJlbmNlIHBhdGg9Jy4uLy4uLy4uL3R5cGluZ3MvdHNkLmQudHMnIC8+XG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCBteXNxbCA9IHJlcXVpcmUoXCJteXNxbFwiKTtcbmltcG9ydCBxID0gcmVxdWlyZShcInFcIik7XG5pbXBvcnQgcmVxdWVzdCA9IHJlcXVpcmUoXCJyZXF1ZXN0XCIpO1xuXG5leHBvcnQgaW50ZXJmYWNlIElDb25uZWN0aW9uU2VydmljZSB7XG4gICAgcXVlcnkocGFyYW1zKTogcS5JUHJvbWlzZTx7fT5cbiAgICBxdWVyeV9kYihwYXJhbXMpOiBxLklQcm9taXNlPHt9PlxufVxuXG5leHBvcnQgY2xhc3MgQ29ubmVjdGlvblNlcnZpY2UgaW1wbGVtZW50cyBJQ29ubmVjdGlvblNlcnZpY2Uge1xuICAgIHByaXZhdGUgY29ubmVjdGlvblN0cmVhbTtcbiAgICBwcml2YXRlIGRiQ29uZmlnO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZGJDb25maWcgPSB7XG4gICAgICAgICAgICBob3N0OiAnZ2F0b3IyMDA5Lmhvc3RnYXRvci5jb20nLFxuICAgICAgICAgICAgdXNlcjogJ3RkbmIxMjA3X3NvZicsXG4gICAgICAgICAgICBwYXNzd29yZDogJ3BrY35eXzlXWih1cycsXG4gICAgICAgICAgICBkYXRhYmFzZTogJ3RkbmIxMjA3X3NvZicsIC8vIHByb2R1Y3Rpb25cbiAgICAgICAgICAgIC8vZGF0YWJhc2U6ICd0ZG5iMTIwN19zb2ZfZGV2ZWxvcCcsIC8vIGRldmVsb3BcbiAgICAgICAgICAgIGRlYnVnOiBmYWxzZSxcbiAgICAgICAgICAgIGluc2VjdXJlQXV0aDogdHJ1ZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcXVlcnkocGFyYW1zKTogcS5JUHJvbWlzZTx7fT4ge1xuICAgICAgICB2YXIgX3F1ZXJ5UHJvbWlzZSA9IHEuZGVmZXIoKTtcbiAgICAgICAgcmVxdWVzdCgnaHR0cDovL3NvZi50b2t5by9hcGkvJyArIHBhcmFtcywgZnVuY3Rpb24oZXJyb3IsIHJlc3BvbnNlLCBib2R5KSB7XG4gICAgICAgICAgICBpZiAoIWVycm9yICYmIHJlc3BvbnNlLnN0YXR1c0NvZGUgPT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgX3F1ZXJ5UHJvbWlzZS5yZXNvbHZlKEpTT04ucGFyc2UoYm9keSkpIC8vIFNob3cgdGhlIEhUTUwgZm9yIHRoZSBHb29nbGUgaG9tZXBhZ2UuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIF9xdWVyeVByb21pc2UucmVzb2x2ZShKU09OLnBhcnNlKGJvZHkpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICByZXR1cm4gX3F1ZXJ5UHJvbWlzZS5wcm9taXNlO1xuICAgIH1cblxuICAgIHF1ZXJ5X2RiKHBhcmFtcyk6IHEuSVByb21pc2U8e30+IHtcbiAgICAgICAgdmFyIGRlZmVyID0gcS5kZWZlcigpO1xuICAgICAgICB2YXIgX3Jvd3M7XG4gICAgICAgIHZhciBfY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24odGhpcy5kYkNvbmZpZyk7XG4gICAgICAgIF9jb25uZWN0aW9uLnF1ZXJ5KHBhcmFtcywgKGVyciwgcm93cykgPT4ge1xuICAgICAgICAgICAgX2Nvbm5lY3Rpb24uZW5kKCk7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgZGVmZXIucmVqZWN0KGVycik7IHRocm93IGVyclxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGRlZmVyLnJlc29sdmUocm93cyk7XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBkZWZlci5wcm9taXNlO1xuICAgIH1cblxufVxuXG5leHBvcnQgdmFyIHNlcnZpY2UgPSBuZXcgQ29ubmVjdGlvblNlcnZpY2UoKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==