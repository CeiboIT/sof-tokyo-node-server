///<reference path='../typings/hapi/hapi.d.ts' />
'use strict';
var _this = this;
var hapi = require("hapi");
var ProductsRoutes = require("./modules/products/products.routes");
var _server = new hapi.Server();
this.server = new hapi.Server();
if (process.env.NODE_ENV != 'development') {
    this.server._host = '0.0.0.0';
}
else {
    this.server._host = 'localhost';
}
this.server._port = process.env.PORT || 9000;
for (var route in ProductsRoutes) {
    ProductsRoutes[route].path = '/api' + ProductsRoutes[route].path;
    this.server.route(ProductsRoutes[route]);
}
//help for see all the routes
this.server.route({
    method: 'GET',
    path: '/api',
    handler: function (request, reply) {
        var _table = _this.server.table();
        var _answer = {};
        _table.map(function (element) {
            _answer[element.fingerprint] = {
                path: element.path,
                method: element.method
            };
        });
        reply(_answer);
    }
});
//this.server.connection({ port: process.env.PORT ||3000 });
this.server.start(function () {
    console.log('Started: ' + _this.server.info.uri);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEFBQ0EsaURBRGlEO0FBQ2pELFlBQVksQ0FBQztBQUFiLGlCQTZDQTtBQTNDQSxJQUFPLElBQUksV0FBVyxNQUFNLENBQUMsQ0FBQztBQUM5QixJQUFPLGNBQWMsV0FBVyxvQ0FBb0MsQ0FBQyxDQUFDO0FBRXRFLElBQUksT0FBTyxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFBO0FBRS9CLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFaEMsRUFBRSxDQUFBLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLElBQUksYUFBYSxDQUFDLENBQUMsQ0FBQztJQUMxQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUM7QUFDL0IsQ0FBQztBQUFDLElBQUksQ0FBQyxDQUFDO0lBQ1AsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUMsV0FBVyxDQUFDO0FBQy9CLENBQUM7QUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksSUFBRSxJQUFJLENBQUM7QUFHM0MsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ2xDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEdBQUcsTUFBTSxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDakUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7QUFDekMsQ0FBQztBQUVELEFBQ0EsNkJBRDZCO0FBQzdCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ2pCLE1BQU0sRUFBRSxLQUFLO0lBQ2IsSUFBSSxFQUFFLE1BQU07SUFDWixPQUFPLEVBQUUsVUFBQyxPQUFPLEVBQUUsS0FBSztRQUN0QixJQUFJLE1BQU0sR0FBRyxLQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ2pDLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNWLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBQyxPQUFPO1lBQ2pCLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUc7Z0JBQ3RDLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTtnQkFDbEIsTUFBTSxFQUFFLE9BQU8sQ0FBQyxNQUFNO2FBQ3ZCLENBQUE7UUFDSSxDQUFDLENBQUMsQ0FBQTtRQUNGLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN0QixDQUFDO0NBQ0QsQ0FBQyxDQUFBO0FBRUYsQUFDQSw0REFENEQ7QUFDNUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsS0FBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDakQsQ0FBQyxDQUFDLENBQUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy88cmVmZXJlbmNlIHBhdGg9Jy4uL3R5cGluZ3MvaGFwaS9oYXBpLmQudHMnIC8+XG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCBoYXBpID0gcmVxdWlyZShcImhhcGlcIik7XG5pbXBvcnQgUHJvZHVjdHNSb3V0ZXMgPSByZXF1aXJlKFwiLi9tb2R1bGVzL3Byb2R1Y3RzL3Byb2R1Y3RzLnJvdXRlc1wiKTtcblxudmFyIF9zZXJ2ZXIgPSBuZXcgaGFwaS5TZXJ2ZXIoKVxuXG50aGlzLnNlcnZlciA9IG5ldyBoYXBpLlNlcnZlcigpO1xuXG5pZihwcm9jZXNzLmVudi5OT0RFX0VOViAhPSAnZGV2ZWxvcG1lbnQnKSB7XG5cdHRoaXMuc2VydmVyLl9ob3N0ID0gJzAuMC4wLjAnO1xufSBlbHNlIHtcblx0dGhpcy5zZXJ2ZXIuX2hvc3Q9J2xvY2FsaG9zdCc7XG59XG5cbnRoaXMuc2VydmVyLl9wb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVHx8OTAwMDtcblxuLy8gYWRkIHByb2R1Y3RzIGFwaSByb3V0ZXNcbmZvciAodmFyIHJvdXRlIGluIFByb2R1Y3RzUm91dGVzKSB7XG5cdFByb2R1Y3RzUm91dGVzW3JvdXRlXS5wYXRoID0gJy9hcGknICsgUHJvZHVjdHNSb3V0ZXNbcm91dGVdLnBhdGg7XG5cdHRoaXMuc2VydmVyLnJvdXRlKFByb2R1Y3RzUm91dGVzW3JvdXRlXSlcbn1cblxuLy9oZWxwIGZvciBzZWUgYWxsIHRoZSByb3V0ZXNcbnRoaXMuc2VydmVyLnJvdXRlKHtcblx0bWV0aG9kOiAnR0VUJyxcblx0cGF0aDogJy9hcGknLFxuXHRoYW5kbGVyOiAocmVxdWVzdCwgcmVwbHkpID0+IHtcblx0XHQgdmFyIF90YWJsZSA9IHRoaXMuc2VydmVyLnRhYmxlKCk7XG5cdFx0IHZhciBfYW5zd2VyID0ge307XG4gICAgICAgICAgX3RhYmxlLm1hcCgoZWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgX2Fuc3dlcltlbGVtZW50LmZpbmdlcnByaW50XSA9IHtcblx0XHRcdFx0IHBhdGg6IGVsZW1lbnQucGF0aCxcblx0XHRcdFx0IG1ldGhvZDogZWxlbWVudC5tZXRob2Rcblx0XHRcdH1cbiAgICAgICAgfSlcbiAgICAgICAgcmVwbHkoX2Fuc3dlcik7XG5cdH1cbn0pXG5cbi8vdGhpcy5zZXJ2ZXIuY29ubmVjdGlvbih7IHBvcnQ6IHByb2Nlc3MuZW52LlBPUlQgfHwzMDAwIH0pO1xudGhpcy5zZXJ2ZXIuc3RhcnQoKCkgPT4ge1xuXHRjb25zb2xlLmxvZygnU3RhcnRlZDogJyArIHRoaXMuc2VydmVyLmluZm8udXJpKTtcbn0pXG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==