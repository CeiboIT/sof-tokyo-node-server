///<reference path='../typings/hapi/hapi.d.ts' />
'use strict';
var _this = this;
var hapi = require('hapi');
var routes = require("./routes");
this.server = new hapi.Server({});
// this.client.start();
var _host;
var lout_status = false;
if (process.env.NODE_ENV != 'development') {
    _host = '0.0.0.0';
}
else {
    _host = 'localhost';
}
this.server.connection({
    port: process.env.PORT || 9000,
    host: _host
});
for (var route in routes) {
    routes[route].path = '/api' + routes[route].path;
    this.server.route(routes[route]);
}
// Lout documentation to see all the API routes
this.server.register([require('vision'), require('inert'), {
    register: require('lout'),
    options: {
        endpoint: '/api'
    }
}], function () {
    lout_status = true;
});
// Start server
this.server.start(function () {
    if (lout_status == true)
        console.log('✓ lout: API Documentation generated at ' + _this.server.info.uri + '/api');
    console.log('✓ Hapi: Server started at ' + _this.server.info.uri);
});
module.exports = this.server;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEFBQ0EsaURBRGlEO0FBQ2pELFlBQVksQ0FBQztBQUFiLGlCQXNEQTtBQXBEQSxJQUFPLElBQUksV0FBVyxNQUFNLENBQUMsQ0FBQztBQUM5QixJQUFPLE1BQU0sV0FBVyxVQUFVLENBQUMsQ0FBQztBQUVwQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQU83QixDQUFDLENBQUM7QUFFSCxBQUdBLHVCQUh1QjtJQUduQixLQUFLLENBQUM7QUFDVixJQUFJLFdBQVcsR0FBRyxLQUFLLENBQUM7QUFFeEIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLElBQUksYUFBYSxDQUFDLENBQUMsQ0FBQztJQUN4QyxLQUFLLEdBQUcsU0FBUyxDQUFDO0FBQ3RCLENBQUM7QUFBQyxJQUFJLENBQUMsQ0FBQztJQUNKLEtBQUssR0FBRyxXQUFXLENBQUM7QUFDeEIsQ0FBQztBQUVELElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDO0lBQ25CLElBQUksRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJO0lBQzlCLElBQUksRUFBRSxLQUFLO0NBQ2QsQ0FBQyxDQUFBO0FBR0YsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3ZCLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEdBQUcsTUFBTSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDakQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7QUFDcEMsQ0FBQztBQUVELEFBQ0EsK0NBRCtDO0FBQy9DLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtJQUN2RCxRQUFRLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUN6QixPQUFPLEVBQUU7UUFDTCxRQUFRLEVBQUUsTUFBTTtLQUNuQjtDQUNKLENBQUMsRUFBRTtJQUNBLFdBQVcsR0FBRyxJQUFJLENBQUM7QUFDdkIsQ0FBQyxDQUFDLENBQUM7QUFFSCxBQUNBLGVBRGU7QUFDZixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNkLEVBQUUsQ0FBQyxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUM7UUFBQyxPQUFPLENBQUMsR0FBRyxDQUFDLHlDQUF5QyxHQUFHLEtBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsQ0FBQztJQUNoSCxPQUFPLENBQUMsR0FBRyxDQUFDLDRCQUE0QixHQUFHLEtBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3JFLENBQUMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vPHJlZmVyZW5jZSBwYXRoPScuLi90eXBpbmdzL2hhcGkvaGFwaS5kLnRzJyAvPlxuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgaGFwaSA9IHJlcXVpcmUoJ2hhcGknKTtcbmltcG9ydCByb3V0ZXMgPSByZXF1aXJlKFwiLi9yb3V0ZXNcIik7XG5cbnRoaXMuc2VydmVyID0gbmV3IGhhcGkuU2VydmVyKHtcbiAgICAvLyBjYWNoZTogW3tcbiAgICAvLyAgICAgbmFtZTogJ21vbmdvQ2FjaGUnLFxuICAgIC8vICAgICBlbmdpbmU6IHJlcXVpcmUoJ2NhdGJveC1tb25nb2RiJyksXG4gICAgLy8gICAgIGxvY2F0aW9uOiAnbW9uZ29kYjovL2hlcm9rdV9wYnJnMGNjbTplNG8zbnF1MG00NzJhN3Jpb2ZvZmE1cHNpYkBkczAxOTQ5OC5tbGFiLmNvbToxOTQ5OC9oZXJva3VfcGJyZzBjY20nLFxuICAgIC8vICAgICBwYXJ0aXRpb246ICdjYWNoZScgXG4gICAgLy8gfV1cbn0pO1xuXG4vLyB0aGlzLmNsaWVudC5zdGFydCgpO1xuXG5cbnZhciBfaG9zdDtcbnZhciBsb3V0X3N0YXR1cyA9IGZhbHNlO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT0gJ2RldmVsb3BtZW50Jykge1xuICAgIF9ob3N0ID0gJzAuMC4wLjAnO1xufSBlbHNlIHtcbiAgICBfaG9zdCA9ICdsb2NhbGhvc3QnO1xufVxuXG50aGlzLnNlcnZlci5jb25uZWN0aW9uKHtcbiAgICBwb3J0OiBwcm9jZXNzLmVudi5QT1JUIHx8IDkwMDAsXG4gICAgaG9zdDogX2hvc3Rcbn0pXG5cbi8vIEFkZCBhbGwgQVBJIHJvdXRlc1xuZm9yICh2YXIgcm91dGUgaW4gcm91dGVzKSB7XG4gICAgcm91dGVzW3JvdXRlXS5wYXRoID0gJy9hcGknICsgcm91dGVzW3JvdXRlXS5wYXRoO1xuICAgIHRoaXMuc2VydmVyLnJvdXRlKHJvdXRlc1tyb3V0ZV0pXG59XG5cbi8vIExvdXQgZG9jdW1lbnRhdGlvbiB0byBzZWUgYWxsIHRoZSBBUEkgcm91dGVzXG50aGlzLnNlcnZlci5yZWdpc3RlcihbcmVxdWlyZSgndmlzaW9uJyksIHJlcXVpcmUoJ2luZXJ0JyksIHtcbiAgICByZWdpc3RlcjogcmVxdWlyZSgnbG91dCcpLFxuICAgIG9wdGlvbnM6IHtcbiAgICAgICAgZW5kcG9pbnQ6ICcvYXBpJ1xuICAgIH1cbn1dLCBmdW5jdGlvbigpIHtcbiAgICBsb3V0X3N0YXR1cyA9IHRydWU7XG59KTtcblxuLy8gU3RhcnQgc2VydmVyXG50aGlzLnNlcnZlci5zdGFydCgoKSA9PiB7XG4gICAgaWYgKGxvdXRfc3RhdHVzID09IHRydWUpIGNvbnNvbGUubG9nKCfinJMgbG91dDogQVBJIERvY3VtZW50YXRpb24gZ2VuZXJhdGVkIGF0ICcgKyB0aGlzLnNlcnZlci5pbmZvLnVyaSArICcvYXBpJyk7XG4gICAgY29uc29sZS5sb2coJ+KckyBIYXBpOiBTZXJ2ZXIgc3RhcnRlZCBhdCAnICsgdGhpcy5zZXJ2ZXIuaW5mby51cmkpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gdGhpcy5zZXJ2ZXI7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=