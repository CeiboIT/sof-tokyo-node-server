///<reference path='../typings/hapi/hapi.d.ts' />
'use strict';
var _this = this;
var hapi = require("hapi");
var ProductsRoutes = require("./modules/products/products.routes");
var CategoriesRoutes = require("./modules/categories/categories.routes");
this.server = new hapi.Server();
var _host;
if (process.env.NODE_ENV != 'development') {
    _host = '0.0.0.0';
}
else {
    _host = 'localhost';
}
this.server.connection({
    port: process.env.PORT || 9000,
    host: _host
});
for (var route in ProductsRoutes) {
    ProductsRoutes[route].path = '/api' + ProductsRoutes[route].path;
    this.server.route(ProductsRoutes[route]);
}
for (var route in CategoriesRoutes) {
    CategoriesRoutes[route].path = '/api' + CategoriesRoutes[route].path;
    this.server.route(CategoriesRoutes[route]);
}
//help for see all the routes
this.server.route({
    method: 'GET',
    path: '/api',
    handler: function (request, reply) {
        var _table = _this.server.table();
        var _answer = {};
        _table.table.map(function (element) {
            console.log(element);
            _answer[element.fingerprint] = {
                path: element.path,
                method: element.method
            };
        });
        reply(_answer);
    }
});
//this.server.connection({ port: process.env.PORT ||3000 });
this.server.start(function () {
    console.log('Started: ' + _this.server.info.uri);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEFBQ0EsaURBRGlEO0FBQ2pELFlBQVksQ0FBQztBQUFiLGlCQTZEQTtBQTNEQSxJQUFPLElBQUksV0FBVyxNQUFNLENBQUMsQ0FBQztBQUM5QixJQUFPLGNBQWMsV0FBVyxvQ0FBb0MsQ0FBQyxDQUFDO0FBQ3RFLElBQU8sZ0JBQWdCLFdBQVcsd0NBQXdDLENBQUMsQ0FBQztBQUU1RSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBRWhDLElBQUksS0FBSyxDQUFDO0FBRVYsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLElBQUksYUFBYSxDQUFDLENBQUMsQ0FBQztJQUN4QyxLQUFLLEdBQUcsU0FBUyxDQUFDO0FBQ3RCLENBQUM7QUFBQyxJQUFJLENBQUMsQ0FBQztJQUNKLEtBQUssR0FBRyxXQUFXLENBQUM7QUFDeEIsQ0FBQztBQUlELElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDO0lBQ25CLElBQUksRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJO0lBQzlCLElBQUksRUFBRSxLQUFLO0NBQ2QsQ0FBQyxDQUFBO0FBS0YsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQy9CLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEdBQUcsTUFBTSxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDakUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7QUFDNUMsQ0FBQztBQUdELEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0lBQ2pDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksR0FBRyxNQUFNLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3JFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7QUFDOUMsQ0FBQztBQUVELEFBQ0EsNkJBRDZCO0FBQzdCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ2QsTUFBTSxFQUFFLEtBQUs7SUFDYixJQUFJLEVBQUUsTUFBTTtJQUNaLE9BQU8sRUFBRSxVQUFDLE9BQU8sRUFBRSxLQUFLO1FBQ3BCLElBQUksTUFBTSxHQUFHLEtBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7UUFFakMsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLFVBQUMsT0FBTztZQUNyQixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3JCLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUc7Z0JBQzNCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTtnQkFDbEIsTUFBTSxFQUFFLE9BQU8sQ0FBQyxNQUFNO2FBQ3pCLENBQUE7UUFDTCxDQUFDLENBQUMsQ0FBQTtRQUNGLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuQixDQUFDO0NBQ0osQ0FBQyxDQUFBO0FBRUYsQUFDQSw0REFENEQ7QUFDNUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDZCxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsR0FBRyxLQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNwRCxDQUFDLENBQUMsQ0FBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLzxyZWZlcmVuY2UgcGF0aD0nLi4vdHlwaW5ncy9oYXBpL2hhcGkuZC50cycgLz5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IGhhcGkgPSByZXF1aXJlKFwiaGFwaVwiKTtcbmltcG9ydCBQcm9kdWN0c1JvdXRlcyA9IHJlcXVpcmUoXCIuL21vZHVsZXMvcHJvZHVjdHMvcHJvZHVjdHMucm91dGVzXCIpO1xuaW1wb3J0IENhdGVnb3JpZXNSb3V0ZXMgPSByZXF1aXJlKFwiLi9tb2R1bGVzL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5yb3V0ZXNcIik7XG5cbnRoaXMuc2VydmVyID0gbmV3IGhhcGkuU2VydmVyKCk7XG5cbnZhciBfaG9zdDtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9ICdkZXZlbG9wbWVudCcpIHtcbiAgICBfaG9zdCA9ICcwLjAuMC4wJztcbn0gZWxzZSB7XG4gICAgX2hvc3QgPSAnbG9jYWxob3N0Jztcbn1cblxuXG5cbnRoaXMuc2VydmVyLmNvbm5lY3Rpb24oe1xuICAgIHBvcnQ6IHByb2Nlc3MuZW52LlBPUlQgfHwgOTAwMCxcbiAgICBob3N0OiBfaG9zdFxufSlcblxuXG5cbi8vIGFkZCBwcm9kdWN0cyBhcGkgcm91dGVzXG5mb3IgKHZhciByb3V0ZSBpbiBQcm9kdWN0c1JvdXRlcykge1xuICAgIFByb2R1Y3RzUm91dGVzW3JvdXRlXS5wYXRoID0gJy9hcGknICsgUHJvZHVjdHNSb3V0ZXNbcm91dGVdLnBhdGg7XG4gICAgdGhpcy5zZXJ2ZXIucm91dGUoUHJvZHVjdHNSb3V0ZXNbcm91dGVdKVxufVxuXG4vLyBhZGQgY2F0ZWdvcmllcyBhcGkgcm91dGVzXG5mb3IgKHZhciByb3V0ZSBpbiBDYXRlZ29yaWVzUm91dGVzKSB7XG4gICAgQ2F0ZWdvcmllc1JvdXRlc1tyb3V0ZV0ucGF0aCA9ICcvYXBpJyArIENhdGVnb3JpZXNSb3V0ZXNbcm91dGVdLnBhdGg7XG4gICAgdGhpcy5zZXJ2ZXIucm91dGUoQ2F0ZWdvcmllc1JvdXRlc1tyb3V0ZV0pXG59XG5cbi8vaGVscCBmb3Igc2VlIGFsbCB0aGUgcm91dGVzXG50aGlzLnNlcnZlci5yb3V0ZSh7XG4gICAgbWV0aG9kOiAnR0VUJyxcbiAgICBwYXRoOiAnL2FwaScsXG4gICAgaGFuZGxlcjogKHJlcXVlc3QsIHJlcGx5KSA9PiB7XG4gICAgICAgIHZhciBfdGFibGUgPSB0aGlzLnNlcnZlci50YWJsZSgpO1xuXG4gICAgICAgIHZhciBfYW5zd2VyID0ge307XG4gICAgICAgIF90YWJsZS50YWJsZS5tYXAoKGVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVsZW1lbnQpO1xuICAgICAgICAgICAgX2Fuc3dlcltlbGVtZW50LmZpbmdlcnByaW50XSA9IHtcbiAgICAgICAgICAgICAgICBwYXRoOiBlbGVtZW50LnBhdGgsXG4gICAgICAgICAgICAgICAgbWV0aG9kOiBlbGVtZW50Lm1ldGhvZFxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICByZXBseShfYW5zd2VyKTtcbiAgICB9XG59KVxuXG4vL3RoaXMuc2VydmVyLmNvbm5lY3Rpb24oeyBwb3J0OiBwcm9jZXNzLmVudi5QT1JUIHx8MzAwMCB9KTtcbnRoaXMuc2VydmVyLnN0YXJ0KCgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnU3RhcnRlZDogJyArIHRoaXMuc2VydmVyLmluZm8udXJpKTtcbn0pXG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==