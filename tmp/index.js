///<reference path='../typings/hapi/hapi.d.ts' />
'use strict';
var _this = this;
var hapi = require('hapi');
var routes = require("./routes");
this.server = new hapi.Server({
    cache: [{
        name: 'mongoCache',
        engine: require('catbox-memory'),
        maxByteSize: '26214400'
    }]
});
// this.client.start();
var _host;
var lout_status = false;
if (process.env.NODE_ENV != 'development') {
    _host = '0.0.0.0';
}
else {
    _host = 'localhost';
}
this.server.connection({
    port: process.env.PORT || 9000,
    host: _host
});
for (var route in routes) {
    routes[route].path = '/api' + routes[route].path;
    this.server.route(routes[route]);
}
// Lout documentation to see all the API routes
this.server.register([require('vision'), require('inert'), {
    register: require('lout'),
    options: {
        endpoint: '/api'
    }
}], function () {
    lout_status = true;
});
// Start server
this.server.start(function () {
    if (lout_status == true)
        console.log('✓ lout: API Documentation generated at ' + _this.server.info.uri + '/api');
    console.log('✓ Hapi: Server started at ' + _this.server.info.uri);
});
module.exports = this.server;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEFBQ0EsaURBRGlEO0FBQ2pELFlBQVksQ0FBQztBQUFiLGlCQXVEQTtBQXJEQSxJQUFPLElBQUksV0FBVyxNQUFNLENBQUMsQ0FBQztBQUM5QixJQUFPLE1BQU0sV0FBVyxVQUFVLENBQUMsQ0FBQztBQUVwQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUMxQixLQUFLLEVBQUUsQ0FBQztRQUNKLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSxPQUFPLENBQUMsZUFBZSxDQUFDO1FBQ2hDLFdBQVcsRUFBRSxVQUFVO0tBRzFCLENBQUM7Q0FDTCxDQUFDLENBQUM7QUFFSCxBQUdBLHVCQUh1QjtJQUduQixLQUFLLENBQUM7QUFDVixJQUFJLFdBQVcsR0FBRyxLQUFLLENBQUM7QUFFeEIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLElBQUksYUFBYSxDQUFDLENBQUMsQ0FBQztJQUN4QyxLQUFLLEdBQUcsU0FBUyxDQUFDO0FBQ3RCLENBQUM7QUFBQyxJQUFJLENBQUMsQ0FBQztJQUNKLEtBQUssR0FBRyxXQUFXLENBQUM7QUFDeEIsQ0FBQztBQUVELElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDO0lBQ25CLElBQUksRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJO0lBQzlCLElBQUksRUFBRSxLQUFLO0NBQ2QsQ0FBQyxDQUFBO0FBR0YsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3ZCLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEdBQUcsTUFBTSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDakQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7QUFDcEMsQ0FBQztBQUVELEFBQ0EsK0NBRCtDO0FBQy9DLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtJQUN2RCxRQUFRLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUN6QixPQUFPLEVBQUU7UUFDTCxRQUFRLEVBQUUsTUFBTTtLQUNuQjtDQUNKLENBQUMsRUFBRTtJQUNBLFdBQVcsR0FBRyxJQUFJLENBQUM7QUFDdkIsQ0FBQyxDQUFDLENBQUM7QUFFSCxBQUNBLGVBRGU7QUFDZixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNkLEVBQUUsQ0FBQyxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUM7UUFBQyxPQUFPLENBQUMsR0FBRyxDQUFDLHlDQUF5QyxHQUFHLEtBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsQ0FBQztJQUNoSCxPQUFPLENBQUMsR0FBRyxDQUFDLDRCQUE0QixHQUFHLEtBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3JFLENBQUMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vPHJlZmVyZW5jZSBwYXRoPScuLi90eXBpbmdzL2hhcGkvaGFwaS5kLnRzJyAvPlxuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgaGFwaSA9IHJlcXVpcmUoJ2hhcGknKTtcbmltcG9ydCByb3V0ZXMgPSByZXF1aXJlKFwiLi9yb3V0ZXNcIik7XG5cbnRoaXMuc2VydmVyID0gbmV3IGhhcGkuU2VydmVyKHtcbiAgICBjYWNoZTogW3tcbiAgICAgICAgbmFtZTogJ21vbmdvQ2FjaGUnLFxuICAgICAgICBlbmdpbmU6IHJlcXVpcmUoJ2NhdGJveC1tZW1vcnknKSxcbiAgICAgICAgbWF4Qnl0ZVNpemU6ICcyNjIxNDQwMCdcbiAgICAgICAgLy8gbG9jYXRpb246ICdtb25nb2RiOi8vaGVyb2t1X3BicmcwY2NtOmU0bzNucXUwbTQ3MmE3cmlvZm9mYTVwc2liQGRzMDE5NDk4Lm1sYWIuY29tOjE5NDk4L2hlcm9rdV9wYnJnMGNjbScsXG4gICAgICAgIC8vIHBhcnRpdGlvbjogJ2NhY2hlJyBcbiAgICB9XVxufSk7XG5cbi8vIHRoaXMuY2xpZW50LnN0YXJ0KCk7XG5cblxudmFyIF9ob3N0O1xudmFyIGxvdXRfc3RhdHVzID0gZmFsc2U7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgX2hvc3QgPSAnMC4wLjAuMCc7XG59IGVsc2Uge1xuICAgIF9ob3N0ID0gJ2xvY2FsaG9zdCc7XG59XG5cbnRoaXMuc2VydmVyLmNvbm5lY3Rpb24oe1xuICAgIHBvcnQ6IHByb2Nlc3MuZW52LlBPUlQgfHwgOTAwMCxcbiAgICBob3N0OiBfaG9zdFxufSlcblxuLy8gQWRkIGFsbCBBUEkgcm91dGVzXG5mb3IgKHZhciByb3V0ZSBpbiByb3V0ZXMpIHtcbiAgICByb3V0ZXNbcm91dGVdLnBhdGggPSAnL2FwaScgKyByb3V0ZXNbcm91dGVdLnBhdGg7XG4gICAgdGhpcy5zZXJ2ZXIucm91dGUocm91dGVzW3JvdXRlXSlcbn1cblxuLy8gTG91dCBkb2N1bWVudGF0aW9uIHRvIHNlZSBhbGwgdGhlIEFQSSByb3V0ZXNcbnRoaXMuc2VydmVyLnJlZ2lzdGVyKFtyZXF1aXJlKCd2aXNpb24nKSwgcmVxdWlyZSgnaW5lcnQnKSwge1xuICAgIHJlZ2lzdGVyOiByZXF1aXJlKCdsb3V0JyksXG4gICAgb3B0aW9uczoge1xuICAgICAgICBlbmRwb2ludDogJy9hcGknXG4gICAgfVxufV0sIGZ1bmN0aW9uKCkge1xuICAgIGxvdXRfc3RhdHVzID0gdHJ1ZTtcbn0pO1xuXG4vLyBTdGFydCBzZXJ2ZXJcbnRoaXMuc2VydmVyLnN0YXJ0KCgpID0+IHtcbiAgICBpZiAobG91dF9zdGF0dXMgPT0gdHJ1ZSkgY29uc29sZS5sb2coJ+KckyBsb3V0OiBBUEkgRG9jdW1lbnRhdGlvbiBnZW5lcmF0ZWQgYXQgJyArIHRoaXMuc2VydmVyLmluZm8udXJpICsgJy9hcGknKTtcbiAgICBjb25zb2xlLmxvZygn4pyTIEhhcGk6IFNlcnZlciBzdGFydGVkIGF0ICcgKyB0aGlzLnNlcnZlci5pbmZvLnVyaSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSB0aGlzLnNlcnZlcjtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==