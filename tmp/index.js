///<reference path='../typings/hapi/hapi.d.ts' />
'use strict';
var _this = this;
var hapi = require("hapi");
var routes = require("./routes");
this.server = new hapi.Server();
var _host;
if (process.env.NODE_ENV != 'development') {
    _host = '0.0.0.0';
}
else {
    _host = 'localhost';
}
this.server.connection({
    port: process.env.PORT || 9000,
    host: _host
});
for (var route in routes) {
    routes[route].path = '/api' + routes[route].path;
    this.server.route(routes[route]);
}
// Lout documentation to see all the API routes
this.server.register([require('vision'), require('inert'), {
    register: require('lout'),
    options: {
        endpoint: '/api'
    }
}], function () {
    console.log('✓ lout generator: API Documentation');
});
// Start server
this.server.start(function () {
    console.log('✓ Hapi: Server started at ' + _this.server.info.uri);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEFBQ0EsaURBRGlEO0FBQ2pELFlBQVksQ0FBQztBQUFiLGlCQXlDQTtBQXZDQSxJQUFPLElBQUksV0FBVyxNQUFNLENBQUMsQ0FBQztBQUM5QixJQUFPLE1BQU0sV0FBVyxVQUFVLENBQUMsQ0FBQztBQUVwQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBRWhDLElBQUksS0FBSyxDQUFDO0FBRVYsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLElBQUksYUFBYSxDQUFDLENBQUMsQ0FBQztJQUN4QyxLQUFLLEdBQUcsU0FBUyxDQUFDO0FBQ3RCLENBQUM7QUFBQyxJQUFJLENBQUMsQ0FBQztJQUNKLEtBQUssR0FBRyxXQUFXLENBQUM7QUFDeEIsQ0FBQztBQUVELElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDO0lBQ25CLElBQUksRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJO0lBQzlCLElBQUksRUFBRSxLQUFLO0NBQ2QsQ0FBQyxDQUFBO0FBR0YsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3ZCLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEdBQUcsTUFBTSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDakQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7QUFDcEMsQ0FBQztBQUVELEFBQ0EsK0NBRCtDO0FBQy9DLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtJQUN2RCxRQUFRLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUN6QixPQUFPLEVBQUU7UUFDTCxRQUFRLEVBQUUsTUFBTTtLQUNuQjtDQUNKLENBQUMsRUFBRTtJQUNBLE9BQU8sQ0FBQyxHQUFHLENBQUMscUNBQXFDLENBQUMsQ0FBQztBQUN2RCxDQUFDLENBQUMsQ0FBQztBQUVILEFBQ0EsZUFEZTtBQUNmLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsR0FBRyxLQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNyRSxDQUFDLENBQUMsQ0FBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLzxyZWZlcmVuY2UgcGF0aD0nLi4vdHlwaW5ncy9oYXBpL2hhcGkuZC50cycgLz5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IGhhcGkgPSByZXF1aXJlKFwiaGFwaVwiKTtcbmltcG9ydCByb3V0ZXMgPSByZXF1aXJlKFwiLi9yb3V0ZXNcIik7XG5cbnRoaXMuc2VydmVyID0gbmV3IGhhcGkuU2VydmVyKCk7XG5cbnZhciBfaG9zdDtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9ICdkZXZlbG9wbWVudCcpIHtcbiAgICBfaG9zdCA9ICcwLjAuMC4wJztcbn0gZWxzZSB7XG4gICAgX2hvc3QgPSAnbG9jYWxob3N0Jztcbn1cblxudGhpcy5zZXJ2ZXIuY29ubmVjdGlvbih7XG4gICAgcG9ydDogcHJvY2Vzcy5lbnYuUE9SVCB8fCA5MDAwLFxuICAgIGhvc3Q6IF9ob3N0XG59KVxuXG4vLyBBZGQgYWxsIEFQSSByb3V0ZXNcbmZvciAodmFyIHJvdXRlIGluIHJvdXRlcykge1xuICAgIHJvdXRlc1tyb3V0ZV0ucGF0aCA9ICcvYXBpJyArIHJvdXRlc1tyb3V0ZV0ucGF0aDtcbiAgICB0aGlzLnNlcnZlci5yb3V0ZShyb3V0ZXNbcm91dGVdKVxufVxuXG4vLyBMb3V0IGRvY3VtZW50YXRpb24gdG8gc2VlIGFsbCB0aGUgQVBJIHJvdXRlc1xudGhpcy5zZXJ2ZXIucmVnaXN0ZXIoW3JlcXVpcmUoJ3Zpc2lvbicpLCByZXF1aXJlKCdpbmVydCcpLCB7XG4gICAgcmVnaXN0ZXI6IHJlcXVpcmUoJ2xvdXQnKSxcbiAgICBvcHRpb25zOiB7XG4gICAgICAgIGVuZHBvaW50OiAnL2FwaSdcbiAgICB9XG59XSwgZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coJ+KckyBsb3V0IGdlbmVyYXRvcjogQVBJIERvY3VtZW50YXRpb24nKTtcbn0pO1xuXG4vLyBTdGFydCBzZXJ2ZXJcbnRoaXMuc2VydmVyLnN0YXJ0KCgpID0+IHtcbiAgICBjb25zb2xlLmxvZygn4pyTIEhhcGk6IFNlcnZlciBzdGFydGVkIGF0ICcgKyB0aGlzLnNlcnZlci5pbmZvLnVyaSk7XG59KVxuXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=